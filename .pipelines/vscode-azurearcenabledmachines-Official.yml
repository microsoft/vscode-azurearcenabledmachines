#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

schedules:
- cron: '16 17 * * 4'
  displayName: Weekly CodeQL
  branches:
    include:
    - main
  always: true

parameters:
- name: debug
  displayName: Enable debug output
  type: boolean
  default: false

variables:
  system.debug: ${{ parameters.debug }}
  WindowsContainerImage: onebranch.azurecr.io/windows/ltsc2019/vse2022:latest

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  # https://aka.ms/obpipelines/templates
  template: v2/OneBranch.Official.CrossPlat.yml@templates 
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      asyncSdl:
        enabled: true
        forStages: [build]
    stages:
    - stage: build
      jobs:
      - job: main
        displayName: Build package
        pool:
          type: windows
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/out
          ob_sdl_codeSignValidation_excludes: -|**\*.js # Node.js JavaScript signatures are not supported
        steps:
          - pwsh: Write-Output "##vso[task.setvariable variable=version;isOutput=true]$((Get-Content -Raw -Path package.json | ConvertFrom-Json).version)"
            name: package
            displayName: Get version from package.json
          - task: onebranch.pipeline.version@1
            displayName: Set OneBranch version
            inputs:
              system: Custom
              customVersion: $(package.version)
          - task: UseNode@1
            displayName: Use Node 18.x
            inputs:
              version: 18.x
          - pwsh: npm ci
            displayName: Install NPM packages
          - pwsh: npm run compile -- --minify
            displayName: Build minified extension
          - pwsh: New-Item -ItemType Directory -Force out && npm run package -- --out out/
            displayName: Create package
      - job: test
        displayName: Build and run tests
        pool:
          type: windows
          isCustom: true
          name: Azure Pipelines
          vmImage: macOS-latest
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/out
          skipComponentGovernanceDetection: true
        steps:
          - task: UseNode@1
            displayName: Use Node 18.x
            inputs:
              version: 18.x
          - pwsh: npm ci
            displayName: Install NPM packages
          - pwsh: npm run test
            displayName: Run tests
    - stage: release
      dependsOn: build
      condition: ne(variables['Build.Reason'], 'Schedule')
      variables:
        version: $[ stageDependencies.build.main.outputs['package.version'] ]
        drop: $(Pipeline.Workspace)/drop_build_main
      jobs:
      - job: github
        displayName: Publish draft to GitHub
        pool:
          type: windows
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/out
        steps:
        - download: current
          displayName: Download artifacts
        - task: GitHubRelease@1
          displayName: Create GitHub release
          inputs:
            gitHubConnection: GitHub
            repositoryName: microsoft/vscode-azurearcenabledmachines
            assets: $(drop)/vscode-azurearcenabledmachines-$(version).vsix
            tagSource: userSpecifiedTag
            tag: v$(version)
            isDraft: true
            addChangeLog: false
            releaseNotesSource: inline
            releaseNotesInline: "<!-- TODO: Generate release notes on GitHub! -->"
      - job: validation
        displayName: Manual validation
        pool:
          type: agentless
        timeoutInMinutes: 1440
        steps:
        - task: ManualValidation@0
          displayName: Wait 24 hours for validation
          inputs:
            notifyUsers: $(Build.RequestedForEmail)
            instructions: Please validate the release
            timeoutInMinutes: 1440
      - job: vscode
        dependsOn: validation
        displayName: Publish to VS Code Marketplace
        pool:
          type: windows
        variables:
          - group: VSCodeMarketplace
          - name: ob_outputDirectory
            value: $(Build.SourcesDirectory)/out
        steps:
        - download: current
          displayName: Download artifacts
        - pwsh: npm ci
          displayName: Install NPM packages (for vsce)
        - task: AzureCLI@2
          displayName: Run vsce publish
          inputs:
            azureSubscription: vscode-marketplace
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              $publishArgs = @(
                '--azure-credential'
                '--packagePath'
                '$(drop)/vscode-azurearcenabledmachines-$(version).vsix'
              )
              npm run publish -- @publishArgs
